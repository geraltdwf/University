using System;
using System.Collections;
/*
Napisz program, który wczytuje graf podany jako macierz sąsiedztwa i wyświetla listę sąsiedztwa danego grafu.
*/
namespace Listy_sąsiedztwa_8._2
{
    class Program
    {
        static void Main(string[] args)
        {
            int vertex = 0;
            string[] pre_matrix = Console.ReadLine().Split(' ');
            string[][] matrix = new string[pre_matrix.Length][];
            matrix[0] = pre_matrix;
            vertex += 1;
            for (int i = 1; i < pre_matrix.Length; i++)
            {
                matrix[i] = new string[vertex];
                matrix[i] = Console.ReadLine().Split(' ');
                vertex += 1;
            }
            adjacency_list(matrix);
        }
        public static void adjacency_out(string [][]new_matrix)
        {
            for (int i = 0; i < new_matrix.Length; i++)
            {
                for (int j = 0; j < new_matrix[i].Length; j++)
                {
                    if (j == new_matrix[i].Length - 1)
                    {
                        Console.Write(new_matrix[i][j]);
                    }
                    else
                    {
                        Console.Write(new_matrix[i][j] + " ");
                    }

                }
                Console.WriteLine();
            }
        }    
        public static void adjacency_list(string [][]matrix)
        {
            ArrayList adjacency= new ArrayList();
            string[][] new_matrix = new string[matrix.Length][];
            for (int i = 0; i < matrix.Length; i++)
            {
                adjacency.Add(Convert.ToString(i+1)); // Dodanie nr wierzchołka
                for (int j = 0; j < matrix[i].Length; j++)
                {
                    if (matrix[i][j] == "1") // Jezeli wystepuje 1, to dodaj do listy nr wierzcholka
                    {
                        adjacency.Add(Convert.ToString(j+1));
                    }
                    else
                    {
                        continue;
                    }                  
                }
                //adjacency.Sort();
                new_matrix[i] = (string[])adjacency.ToArray(Type.GetType("System.String"));
                adjacency.Clear();
            }
            adjacency_out(new_matrix);
        }
    }
}
